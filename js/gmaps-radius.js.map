{
  "version": 3,
  "file": "gmaps-radius.js",
  "sourceRoot": "",
  "sources": [
    "gmaps-radius.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "$ ->\n  markers = []\n\n  map = new google.maps.Map($('#map')[0], {\n    zoom: 4\n    center: new google.maps.LatLng(51.500358, -0.125506) # London\n    mapType: google.maps.MapTypeId.ROADMAP\n    disableDefaultUI: true\n    mapTypeControl: true\n    zoomControl: true\n    mapTypeControlOptions:\n      style: google.maps.MapTypeControlStyle.DROPDOWN_MENU\n      position: google.maps.ControlPosition.TOP_RIGHT\n    zoomControlOptions:\n      position: google.maps.ControlPosition.TOP_RIGHT\n  })\n\n  earthRadii = {\n# The radius of the earth in various units\n    mi: 3963.1676\n    km: 6378.1\n    ft: 20925524.9\n    mt: 6378100\n    in: 251106299\n    yd: 6975174.98\n    fa: 3487587.49\n    na: 3443.89849\n    ch: 317053.408\n    rd: 1268213.63\n    fr: 31705.3408\n  }\n\n  polygonDestructionHandler = ->\n    @setMap(null)\n\n  clearMarkers = () ->\n    m.setMap(null) for m in markers\n    markers = []\n  geolocate = () ->\n    # Try HTML5 geolocation.\n    if navigator.geolocation\n      navigator.geolocation.getCurrentPosition ((position) ->\n        pos =\n          lat: position.coords.latitude\n          lng: position.coords.longitude\n\n        map.setCenter pos\n\n        options =\n          position: pos\n          map: map\n          draggable: true\n\n        marker = new google.maps.Marker(options)\n\n        map.setZoom(17)\n        map.panTo(marker.position)\n        select = $('#unitSelector')\n        unitKey = $('option', select).eq(select[0].selectedIndex).val()\n        radius = parseFloat(document.getElementById('radiusInput').value)\n        radius = (radius / earthRadii[unitKey]) * earthRadii['mt']\n\n        markerCircle = new google.maps.Circle({\n          center: pos\n          clickable: true\n          draggable: false\n          editable: false\n          fillColor: '#004de8'\n          fillOpacity: 0.27\n          map: map\n          radius: radius\n          strokeColor: '#004de8'\n          strokeOpacity: 0.62\n          strokeWeight: 1\n        })\n\n        latitud = document.getElementById('lat');\n        longitud = document.getElementById('lng');\n\n        google.maps.event.addListener(marker, 'dragend', (evt) ->\n          if checkIfContains evt, markerCircle\n            latitud.value = evt.latLng.lat()\n            longitud.value = evt.latLng.lng()\n          else\n            latitud.value = \"\"\n            longitud.value = \"\"\n        )\n        google.maps.event.addListener(marker, 'dragstart', (evt) ->\n          if checkIfContains evt, markerCircle\n            latitud.value = evt.latLng.lat()\n            longitud.value = evt.latLng.lng()\n          else\n            latitud.value = \"\"\n            longitud.value = \"\"\n        )\n\n      ), ->\n        handleLocationError true, infoWindow, map.getCenter()\n    else\n# Browser doesn't support Geolocation\n      handleLocationError false, infoWindow, map.getCenter()\n\n  checkIfContains = (e, myCircle) ->\n    return myCircle.getBounds().contains(e.latLng)\n\n  circleDrawHandler = (e) ->\n    # Get the radius in meters (as Google requires)\n    select = $('#unitSelector')\n    unitKey = $('option', select).eq(select[0].selectedIndex).val()\n    radius = parseFloat(document.getElementById('radiusInput').value)\n    radius = (radius / earthRadii[unitKey]) * earthRadii['mt']\n\n    circle = new google.maps.Circle({\n      center: e.latLng\n      clickable: true\n      draggable: false\n      editable: false\n      fillColor: '#004de8'\n      fillOpacity: 0.27\n      map: map\n      radius: radius\n      strokeColor: '#004de8'\n      strokeOpacity: 0.62\n      strokeWeight: 1\n    })\n\n  searchInput = document.getElementById('searchInput')\n  $(searchInput.form).on({ submit: -> false })\n  searchBox = new google.maps.places.SearchBox(searchInput)\n  google.maps.event.addListener(searchBox, 'places_changed', ->\n    ### When a place is selected, center on it ###\n    clearMarkers()\n    location = searchBox.getPlaces()[0]\n    if location?\n      if location.geometry.viewport?\n        map.fitBounds(location.geometry.viewport)\n        map.panToBounds(location.geometry.viewport)\n      else\n        map.setCenter(location.geometry.location)\n\n      # Create a marker at the location\n      markers.push(new google.maps.Marker({\n        position: location.geometry.location\n        map: map\n        title: location.name\n        clickable: false\n      }))\n    return\n  )\n\n  updateURL = ->\n    center = map.getCenter()\n    params = {\n      lat: _.round(center.lat(), 6).toString(),\n      lng: _.round(center.lng(), 6).toString(),\n      z: map.getZoom().toString(),\n      u: $('#unitSelector').val(),\n      r: $('#radiusInput').val()\n    }\n    delete params['r'] if !params.r\n    u = new URI()\n    u.setQuery(params)\n    window.history?.replaceState?(null, null, u.toString())\n\n  google.maps.event.addListener(map, 'bounds_changed', _.debounce(updateURL, 200))\n  google.maps.event.addListener(map, 'zoom_changed', updateURL)\n  $('#unitSelector, #radiusInput').on('change', updateURL)\n\n  $(window).on('hashchange', (e) ->\n    query = (new URI()).query(true)\n\n    geolocate()\n    # Set center from lat/lng\n    center_ = map.getCenter()\n    center = [center_.lat(), center_.lng()]\n    newCenter = [center[0], center[1]]\n    if query.lat?\n      newCenter[0] = parseFloat(query.lat)\n    if query.lng?\n      newCenter[1] = parseFloat(query.lng)\n    if $.grep(newCenter, isNaN).length == 0\n      map.setCenter({\n        lat: newCenter[0],\n        lng: newCenter[1]\n      })\n\n    # Set zoom from z\n    if query.z?\n      z = parseInt(query.z, 10)\n      if !isNaN(z) then map.setZoom(z)\n\n    # Set radius from r\n    if query.r?\n      $('#radiusInput').val(query.r)\n\n    # Set unit from u\n    if query.u?\n      $('#unitSelector').val(query.u)\n  ).triggerHandler('hashchange')\n"
  ]
}